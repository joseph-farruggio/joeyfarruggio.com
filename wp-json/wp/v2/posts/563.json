{"id":563,"date":"2020-07-01T16:20:29","date_gmt":"2020-07-01T16:20:29","guid":{"rendered":"https:\/\/joeyfarruggio.com\/?p=563"},"modified":"2020-07-09T18:04:02","modified_gmt":"2020-07-09T18:04:02","slug":"drift-chatbot-page-speed","status":"publish","type":"post","link":"https:\/\/joeyfarruggio.com\/javascript\/drift-chatbot-page-speed\/","title":{"rendered":"Drift Chatbot \u2013\u00a0Optimize for Page Speed"},"content":{"rendered":"\n<p>Update July 9th 2020: I&#8217;ve created a WP plugin called <a href=\"https:\/\/chatbotspeed.com\/\" class=\"rank-math-link\">Chatbot Lazy Loader<\/a> to handle the optimization of your chatbot. It even hit #3 on Product Hunt.<\/p>\n\n\n\n<div style=\"height:20px\" aria-hidden=\"true\" class=\"wp-block-spacer\"><\/div>\n\n\n\n<figure class=\"wp-block-image size-large\"><img loading=\"lazy\" width=\"1024\" height=\"613\" src=\"https:\/\/joeyfarruggio.com\/wp-content\/uploads\/2020\/07\/chatbot-slide-1-1024x613.png\" alt=\"\" class=\"wp-image-593\" srcset=\"https:\/\/joeyfarruggio.com\/wp-content\/uploads\/2020\/07\/chatbot-slide-1-1024x613.png 1024w, https:\/\/joeyfarruggio.com\/wp-content\/uploads\/2020\/07\/chatbot-slide-1-300x180.png 300w, https:\/\/joeyfarruggio.com\/wp-content\/uploads\/2020\/07\/chatbot-slide-1-768x460.png 768w, https:\/\/joeyfarruggio.com\/wp-content\/uploads\/2020\/07\/chatbot-slide-1.png 1270w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" \/><\/figure>\n\n\n\n<div style=\"text-align: center;\"><a href=\"https:\/\/www.producthunt.com\/posts\/chatbot-lazy-loader?utm_source=badge-top-post-badge&amp;utm_medium=badge&amp;utm_souce=badge-chatbot-lazy-loader\" target=\"_blank\" rel=\"noopener noreferrer\"><img loading=\"lazy\" src=\"https:\/\/api.producthunt.com\/widgets\/embed-image\/v1\/top-post-badge.svg?post_id=213951&amp;theme=light&amp;period=daily\" alt=\"Chatbot Lazy Loader - Eliminate page speed issues caused by chatbots on WordPress | Product Hunt Embed\" style=\"width: 250px; height: 54px;\" width=\"250px\" height=\"54px\"><\/a><\/div>\n\n\n\n<div style=\"height:50px\" aria-hidden=\"true\" class=\"wp-block-spacer\"><\/div>\n\n\n\n<p>When we&#8217;re considering JS dependent functionality, we need to weight its benefits against its costs. Chat bots are powerful support and lead gen tools, but like any JavaScript resource it adds weight to your web page, slows TTI, and delays other resources from loading.<\/p>\n\n\n\n<p>We should also consider smarter ways of including our JavaScript. The easiest optimization to make is to only include JavaScript on the pages that require it. That&#8217;s simple enough, right? But with Chatbots, it&#8217;s less of a <code>page specific issue<\/code> and a <code>timed intent issue<\/code>.<\/p>\n\n\n\n<p>So if you want to keep your Drift chat bot, but avoid the hit to your page speed, here&#8217;s how to optimize the way you include Drift&#8217;s JavaScript.<\/p>\n\n\n\n<h2>Put your visitors first<\/h2>\n\n\n\n<p>Think of the way visitors are using your website. It&#8217;s a safe assumption to make that most visitors are not using a chatbot every time they view a page on your website. They are most likely going to hit an entry point, move through a flow, and at some point they may have a question that prompts them to use a chatbot.<\/p>\n\n\n\n<p>So let&#8217;s not make them download that JavaScript when they don&#8217;t need it. Instead we can allow visitors to download that JavaScript on-demand, that is \u2013 only when they want to use the chatbot.<\/p>\n\n\n\n<p>This is exactly what we did at <a href=\"https:\/\/www.bizrocket.net\" class=\"rank-math-link\">Biz Rocket<\/a> when we first added Drift back in January. Drift later on released a <a href=\"https:\/\/gethelp.drift.com\/hc\/en-us\/articles\/360019504134-Drift-Load-Time-and-Supported-Browsers\" class=\"rank-math-link\">tutorial<\/a> on how to do something similar to what we did. <\/p>\n\n\n\n<h2>Drift&#8217;s standard install instructions<\/h2>\n\n\n\n<p>When you create a Drift account, you&#8217;re given this JavaScript snippet with instructions to add it to the &lt;head&gt; of your website:<\/p>\n\n\n\n<div style=\"height:20px\" aria-hidden=\"true\" class=\"wp-block-spacer\"><\/div>\n\n\n\n<pre title=\"Inline Drift JavaScript\" class=\"wp-block-code\"><code lang=\"javascript\" class=\"language-javascript line-numbers\">&lt;!-- Start of Async Drift Code -->\n&lt;script>\n\"use strict\";\n\n!function() {\n  var t = window.driftt = window.drift = window.driftt || [];\n  if (!t.init) {\n    if (t.invoked) return void (window.console &amp;&amp; console.error &amp;&amp; console.error(\"Drift snippet included twice.\"));\n    t.invoked = !0, t.methods = [ \"identify\", \"config\", \"track\", \"reset\", \"debug\", \"show\", \"ping\", \"page\", \"hide\", \"off\", \"on\" ], \n    t.factory = function(e) {\n      return function() {\n        var n = Array.prototype.slice.call(arguments);\n        return n.unshift(e), t.push(n), t;\n      };\n    }, t.methods.forEach(function(e) {\n      t[e] = t.factory(e);\n    }), t.load = function(t) {\n      var e = 3e5, n = Math.ceil(new Date() \/ e) * e, o = document.createElement(\"script\");\n      o.type = \"text\/javascript\", o.async = !0, o.crossorigin = \"anonymous\", o.src = \"https:\/\/js.driftt.com\/include\/\" + n + \"\/\" + t + \".js\";\n      var i = document.getElementsByTagName(\"script\")[0];\n      i.parentNode.insertBefore(o, i);\n    };\n  }\n}();\ndrift.SNIPPET_VERSION = '0.3.1';\ndrift.load('hrypg4pnzn33');\n&lt;\/script>\n&lt;!-- End of Async Drift Code --><\/code><\/pre>\n\n\n\n<p>This is the exact code that&#8217;s running at: <a href=\"https:\/\/www.bizrocket.net\/drift-test-head\/\">https:\/\/www.bizrocket.net\/drift-test-head<\/a>. The code is added to the &lt;head&gt; of the document. That means that it&#8217;s render blocking and it will affect the page&#8217;s TTI.<\/p>\n\n\n\n<p>I ran this test trough Lighthouse and this is what I got:<\/p>\n\n\n\n<figure class=\"wp-block-image size-large\"><img loading=\"lazy\" width=\"770\" height=\"1024\" src=\"https:\/\/joeyfarruggio.com\/wp-content\/uploads\/2020\/07\/image-2-770x1024.png\" alt=\"\" class=\"wp-image-571\" srcset=\"https:\/\/joeyfarruggio.com\/wp-content\/uploads\/2020\/07\/image-2-770x1024.png 770w, https:\/\/joeyfarruggio.com\/wp-content\/uploads\/2020\/07\/image-2-226x300.png 226w, https:\/\/joeyfarruggio.com\/wp-content\/uploads\/2020\/07\/image-2-768x1021.png 768w, https:\/\/joeyfarruggio.com\/wp-content\/uploads\/2020\/07\/image-2.png 788w\" sizes=\"(max-width: 770px) 100vw, 770px\" \/><\/figure>\n\n\n\n<p>Not too impressive, especially since the the page is very thin and the rest of the site scores in the upper 90s\/100.<\/p>\n\n\n\n<p>So let&#8217;s see what we can do to improve things.<\/p>\n\n\n\n<h2>Optimizing Drift for page speed<\/h2>\n\n\n\n<p>Instead of loading that JavaScript on every page, let&#8217;s only add the JavaScript when someone clicks a &#8220;Chat with us&#8221; button.<\/p>\n\n\n\n<h3>Step 1 \u2013&nbsp;Add Drift&#8217;s JavaScript as a function<\/h3>\n\n\n\n<div style=\"height:20px\" aria-hidden=\"true\" class=\"wp-block-spacer\"><\/div>\n\n\n\n<pre title=\"Custom Drift JavaScript\" class=\"wp-block-code\"><code lang=\"javascript\" class=\"language-javascript line-numbers\">function LoadDriftWidget(el) {\n\/\/ Paste all of the JavaScript in here\n}\n<\/code><\/pre>\n\n\n\n<p>Then, somewhere on your page add a button that, when clicked, calls the <code>LoadDriftWidget()<\/code> function.<\/p>\n\n\n\n<div style=\"height:20px\" aria-hidden=\"true\" class=\"wp-block-spacer\"><\/div>\n\n\n\n<pre title=\"An HTML Button\" class=\"wp-block-code\"><code lang=\"markup\" class=\"language-markup\">&lt;button id=\"a-unique-id\" onclick=\"LoadDriftWidget(this.id)\">Let\u2019s Chat&lt;\/button><\/code><\/pre>\n\n\n\n<p>Clicking that button will download the Drift JavaScript on-demand and then launch the chat widget. And this is great. It&#8217;s much better than what we had before.<\/p>\n\n\n\n<p>But we can do better. <\/p>\n\n\n\n<p>With that implementation, what happens when someone clicks the button? <\/p>\n\n\n\n<ol><li>You click the button<\/li><li>Wait a second or so<\/li><li>Chat bot appears<\/li><\/ol>\n\n\n\n<p>That&#8217;s fine if the chat bot appears very quickly, but if there&#8217;s even just a slight delay it may appear that the button is broken. What we want to do is give the visitor feedback so that they know that clicking the button worked and that the chat bot is loading.<\/p>\n\n\n\n<h3>Step 2 &#8211; Provide feedback<\/h3>\n\n\n\n<p>The HTML button should have a unique ID. That&#8217;s easy enough to automate in JavaScript or PHP. And we&#8217;ll use that ID when the visitor clicks the button:<\/p>\n\n\n\n<div style=\"height:20px\" aria-hidden=\"true\" class=\"wp-block-spacer\"><\/div>\n\n\n\n<pre title=\"Adding a loading indicator\" class=\"wp-block-code\"><code lang=\"javascript\" class=\"language-javascript line-numbers\">\/\/ Code to run when a Drift button is clicked\nfunction LoadDriftWidget(el) {\n    \/\/ Get the initial button text and store it for later\n    var text = document.getElementById(el).innerText;\n\n    \/\/ Change the button text to a loading indicator\n    document.getElementById(el).innerText = \"loading...\";\n\n    \/\/ ... the rest of the Drift JavaScript\n\n    \/\/ Once Drift is loaded and ready\n    drift.on('ready', function(api, payload) {\n       \/\/ Reset the button text to its initial state\n      document.getElementById(el).innerText = text;\n    }\n\n}<\/code><\/pre>\n\n\n\n<p>Now when someone clicks the button, the button text changes to &#8220;loading&#8230;&#8221; and as soon as the chatbot appears it changes back to its original state.<\/p>\n\n\n\n<p>Again, much better. But I noticed one small hick up in this implementation. If someone were to click the chatbot a second time, after the script has already loaded, nothing happens. The Drift JavaScript has already been loaded, so there&#8217;s nothing we should expect this code to do.<\/p>\n\n\n\n<h3>Step 3 \u2013 Launch the Drift sidebar<\/h3>\n\n\n\n<p>Drift has example JavaScript to interact with the chat widget. One of the features is the ability to programmatically open and close the sidebar widget.<\/p>\n\n\n\n<p>So here&#8217;s how I changed the code to open the sidebar widget if the chat button was clicked two or more times:<\/p>\n\n\n\n<pre title=\"Open Drift Sidebar Widget\" class=\"wp-block-code\"><code lang=\"javascript\" class=\"language-javascript line-numbers\">\/\/ Initiate the counter\nvar i = 0;\n\n\/\/ Code to run when a Drift button is clicked\nfunction LoadDriftWidget(el) {\n    \/\/ Increment the counter\n    i++;\n  \n    \/\/ ... rest of the example JavaScript\n\n    \/\/ Once Drift is loaded and ready\n    drift.on('ready', function(api, payload) {\n    \n        \/\/ Reset the button text to its initial state\n        document.getElementById(el).innerText = text;\n\n        \/\/ If a Drift button is clicked more than once, open the chat sidebar\n        \/\/ If this is not the first time the button was clicked, open the sidebar\n        if (i >= 2) {\n            api.sidebar.open();\n        }\n    });\n});<\/code><\/pre>\n\n\n\n<p>This is the exact code that I have running at <a href=\"https:\/\/www.bizrocket.net\" class=\"rank-math-link\">Biz Rocket<\/a> and I created a separate page to compare against our first Lighthouse test: <a href=\"https:\/\/www.bizrocket.net\/drift-test-optimized\/\">https:\/\/www.bizrocket.net\/drift-test-optimized\/<\/a><\/p>\n\n\n\n<figure class=\"wp-block-image alignwide size-large\"><img loading=\"lazy\" width=\"1024\" height=\"663\" src=\"https:\/\/joeyfarruggio.com\/wp-content\/uploads\/2020\/07\/image-6-1024x663.png\" alt=\"\" class=\"wp-image-577\" srcset=\"https:\/\/joeyfarruggio.com\/wp-content\/uploads\/2020\/07\/image-6-1024x663.png 1024w, https:\/\/joeyfarruggio.com\/wp-content\/uploads\/2020\/07\/image-6-300x194.png 300w, https:\/\/joeyfarruggio.com\/wp-content\/uploads\/2020\/07\/image-6-768x497.png 768w, https:\/\/joeyfarruggio.com\/wp-content\/uploads\/2020\/07\/image-6-1536x995.png 1536w, https:\/\/joeyfarruggio.com\/wp-content\/uploads\/2020\/07\/image-6-2048x1327.png 2048w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" \/><\/figure>\n\n\n\n<p>Obviously that&#8217;s much better considering the fact that this was 3 minutes worth of work.<\/p>\n\n\n\n<p>Here&#8217;s the final code in full:<br><\/p>\n\n\n\n<pre title=\"Full Optimized Drift JavaScript\" class=\"wp-block-code\"><code lang=\"javascript\" class=\"language-javascript line-numbers\">\"use strict\";\n\n\/\/ Initiate the counter\nvar i = 0;\n\n\/\/ Code to run when a Drift button is clicked\nfunction LoadDriftWidget(el) {\n  \/\/ Increment the counter\n  i++;\n  \n  \/\/ Get the intial button text\n  var text = document.getElementById(el).innerText;\n\n  \/\/ Change the button text to a loading indicator\n  document.getElementById(el).innerText = \"loading...\";\n  \n\n  \/\/ Start Drift Widget Code\n  var t = window.driftt = window.drift = window.driftt || [];\n  if (!t.init) {\n    if (t.invoked) {\n      api.sidebar.open()\n      return void (window.console &amp;&amp; console.error &amp;&amp; console.error(\"Drift snippet included twice.\"));\n    }\n    t.invoked = !0, t.methods = [ \"identify\", \"config\", \"track\", \"reset\", \"debug\", \"show\", \"ping\", \"page\", \"hide\", \"off\", \"on\" ], \n    t.factory = function(e) {\n      return function() {\n        var n = Array.prototype.slice.call(arguments);\n        return n.unshift(e), t.push(n), t;\n      };\n    }, t.methods.forEach(function(e) {\n      t[e] = t.factory(e);\n    }), t.load = function(t) {\n      var e = 3e5, n = Math.ceil(new Date() \/ e) * e, o = document.createElement(\"script\");\n      o.type = \"text\/javascript\", o.async = !0, o.crossorigin = \"anonymous\", o.src = \"https:\/\/js.driftt.com\/include\/\" + n + \"\/\" + t + \".js\";\n      var i = document.getElementsByTagName(\"script\")[0];\n      i.parentNode.insertBefore(o, i);\n    };\n  }\n  \n  drift.SNIPPET_VERSION = '0.3.1';\n  \/\/ Add your own Drift ID here\n  drift.load('XXXXXXXXXX');\n\n  \/\/ Once Drift is loaded and ready\n  drift.on('ready', function(api, payload) {\n    \n    \/\/ Reset the button text to its initial state\n    document.getElementById(el).innerText = text;\n\n    \/\/ If a Drift button is clicked more than once, open the chat sidebar\n    if (i >= 2) {\n      api.sidebar.open();\n    }\n  });\n};\n<\/code><\/pre>\n","protected":false},"excerpt":{"rendered":"<p>Update July 9th 2020: I&#8217;ve created a WP plugin called Chatbot Lazy Loader to handle the optimization of your chatbot. It even hit #3 on Product Hunt. When we&#8217;re considering JS dependent functionality, we need to weight its benefits against its costs. Chat bots are powerful support and lead gen tools, but like any JavaScript [&hellip;]<\/p>\n","protected":false},"author":1,"featured_media":0,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[5],"tags":[],"_links":{"self":[{"href":"https:\/\/joeyfarruggio.com\/wp-json\/wp\/v2\/posts\/563"}],"collection":[{"href":"https:\/\/joeyfarruggio.com\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/joeyfarruggio.com\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/joeyfarruggio.com\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/joeyfarruggio.com\/wp-json\/wp\/v2\/comments?post=563"}],"version-history":[{"count":10,"href":"https:\/\/joeyfarruggio.com\/wp-json\/wp\/v2\/posts\/563\/revisions"}],"predecessor-version":[{"id":594,"href":"https:\/\/joeyfarruggio.com\/wp-json\/wp\/v2\/posts\/563\/revisions\/594"}],"wp:attachment":[{"href":"https:\/\/joeyfarruggio.com\/wp-json\/wp\/v2\/media?parent=563"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/joeyfarruggio.com\/wp-json\/wp\/v2\/categories?post=563"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/joeyfarruggio.com\/wp-json\/wp\/v2\/tags?post=563"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}